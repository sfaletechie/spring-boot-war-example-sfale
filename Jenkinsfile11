pipeline{
    agent any
    tools {
        maven 'Maven' 
    }
    stages{
        stage("TEST"){
            steps{
                sh 'mvn test'
                slackSend channel: 'devops-notifications', message: 'this is TEST stage $BUILD_ID'
            }
        }
        stage("Build"){
            steps{
                slackSend channel: 'devops-notifications', message: 'this is BUILD stage'
                sh 'mvn package'
            }
        }
        stage("Scan"){
            steps{
                sh '#grype dir:. --scope AllLayers --fail-on=critical'
                sh 'grype dir:. --scope AllLayers'
             }
        }
        stage('SonarQube analysis') {
            steps{
                withSonarQubeEnv(installationName: 'sq1') { 
                sh '/usr/bin/mvn sonar:sonar'
                }
            }
        }
        stage('Artifactory-Upload') {
            steps {
                 sh 'jfrog rt upload --url http://192.168.29.22:8082/artifactory --access-token ${ARTIFACTORY_ACCESS_TOKEN} target/hello-world-0.0.1-SNAPSHOT.war java-web-app/'
                }
        }
       stage("deployOnTest"){
            steps{
                slackSend channel: 'devops-notifications', message: 'this is deployOnTest stage'
                deploy adapters: [tomcat7(credentialsId: 'tomcat8details1', path: '', url: 'http://192.168.29.22:8080/')], contextPath: '/app', onFailure: false, war: '**/*.war'
            }
        }
        stage("deployOnPROD"){
             input {
                message 'continueToPROD'
            }
            steps{
                slackSend channel: 'devops-notifications', message: 'this is deployOnPROD stage'
                deploy adapters: [tomcat7(credentialsId: 'tomcat8details1', path: '', url: 'http://192.168.29.171:8080')], contextPath: '/app', onFailure: false, war: '**/*.war'
            }
        }
    }
    post{
        always{
            echo "========always========"
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}
